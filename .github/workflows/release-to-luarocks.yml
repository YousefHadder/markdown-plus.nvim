name: Release to LuaRocks

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to publish (e.g., 1.3.0)'
        required: true
        type: string

jobs:
  luarocks-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Install LuaRocks
        run: |
          sudo apt-get update
          sudo apt-get install -y luarocks
          
          # Install required JSON library for luarocks upload
          sudo luarocks install dkjson
      
      - name: Validate version format
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.3.0)"
            exit 1
          fi
      
      - name: Verify release exists
        run: |
          VERSION="${{ inputs.version }}"
          if ! gh release view "v${VERSION}" > /dev/null 2>&1; then
            echo "Error: Release v${VERSION} does not exist"
            echo "Please create the release first using the 'Create Release' workflow"
            exit 1
          fi
          echo "‚úì Release v${VERSION} found"
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: Set version output
        id: version
        run: |
          VERSION="${{ inputs.version }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"
      
      - name: Verify rockspec exists
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          ROCKSPEC_FILE="markdown-plus.nvim-${VERSION}-1.rockspec"
          
          if [ ! -f "$ROCKSPEC_FILE" ]; then
            echo "Error: Rockspec file $ROCKSPEC_FILE not found"
            echo "Available rockspecs:"
            ls -la *.rockspec
            exit 1
          fi
          
          echo "Found rockspec: $ROCKSPEC_FILE"
          cat "$ROCKSPEC_FILE"
      
      - name: Validate rockspec
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          ROCKSPEC_FILE="markdown-plus.nvim-${VERSION}-1.rockspec"
          
          echo "Validating rockspec..."
          luarocks lint "$ROCKSPEC_FILE"
      
      - name: Upload to LuaRocks
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          ROCKSPEC_FILE="markdown-plus.nvim-${VERSION}-1.rockspec"
          
          if [ -z "$LUAROCKS_API_KEY" ]; then
            echo "‚ö†Ô∏è  Warning: LUAROCKS_API_KEY secret not configured"
            echo "Please add your LuaRocks API key to GitHub Secrets:"
            echo "https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo ""
            echo "Skipping LuaRocks upload..."
            exit 0
          fi
          
          echo "Uploading to LuaRocks..."
          luarocks upload "$ROCKSPEC_FILE" --api-key="$LUAROCKS_API_KEY"
      
      - name: Summary
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo "‚úÖ LuaRocks release for v$VERSION complete!"
          echo ""
          if [ -n "${{ secrets.LUAROCKS_API_KEY }}" ]; then
            echo "üì¶ Published to LuaRocks: https://luarocks.org/modules/yousefhadder/markdown-plus.nvim"
            echo ""
            echo "Users can now install with:"
            echo "  luarocks install markdown-plus.nvim"
            echo ""
            echo "Or install specific version:"
            echo "  luarocks install markdown-plus.nvim ${VERSION}"
          else
            echo "‚ö†Ô∏è  LuaRocks upload skipped (API key not configured)"
            echo "To enable automatic uploads, add LUAROCKS_API_KEY to repository secrets"
          fi
