name: Release Please

on:
  push:
    branches:
      - main
      - 'release-please-test/**'  # Allow testing on test branches

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}

    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  post-release:
    name: Post-release tasks
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Create versioned rockspec
        run: |
          VERSION="${{ needs.release-please.outputs.version }}"
          ROCKSPEC_FILE="rockspecs/markdown-plus.nvim-${VERSION}-1.rockspec"

          # Create rockspec from template
          awk -v version="$VERSION" '
          /^version = / {
            print "version = \"" version "-1\""
            next
          }
          /^  url = "git:\/\/github.com\/.*\.git",?$/ {
            print "  url = \"git://github.com/YousefHadder/markdown-plus.nvim.git\","
            print "  tag = \"v" version "\","
            next
          }
          /^  tag = "v.*",?$/ {
            next
          }
          { print }
          ' rockspecs/markdown-plus.nvim-scm-1.rockspec > "$ROCKSPEC_FILE"

          echo "✓ Created rockspec: $ROCKSPEC_FILE"

      - name: Create PR for rockspec
        uses: peter-evans/create-pull-request@v7
        id: create_pr
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: add rockspec for v${{ needs.release-please.outputs.version }}"
          branch: "chore/add-rockspec-v${{ needs.release-please.outputs.version }}"
          delete-branch: true
          title: "chore: add rockspec for v${{ needs.release-please.outputs.version }}"
          body: |
            ## 🪨 Add Rockspec for v${{ needs.release-please.outputs.version }}
            
            This PR adds the LuaRocks rockspec file for the newly released version.
            
            **Release:** [${{ needs.release-please.outputs.tag_name }}](https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }})
            
            **Files added:**
            - `rockspecs/markdown-plus.nvim-${{ needs.release-please.outputs.version }}-1.rockspec`
            
            ---
            
            ### 🚀 What happens after merge?
            
            When this PR is merged, the **Release to LuaRocks** workflow will be automatically triggered to publish this version to LuaRocks.
            
            🤖 This is an automated PR created by the release workflow.
          labels: |
            chore
            rockspec
      
      - name: Enable auto-merge for rockspec PR
        if: steps.create_pr.outputs.pull-request-number != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ steps.create_pr.outputs.pull-request-number }}"
          
          # Enable auto-merge with squash strategy
          gh pr merge "$PR_NUMBER" --auto --squash --delete-branch
          
          echo "✓ Enabled auto-merge for PR #$PR_NUMBER"
          echo "PR will be automatically merged when all checks pass"

      - name: Summary
        run: |
          VERSION="${{ needs.release-please.outputs.version }}"
          PR_NUMBER="${{ steps.create_pr.outputs.pull-request-number }}"

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# ✅ Release v${VERSION} Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Release Information" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **Tag**: ${{ needs.release-please.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 **Release URL**: https://github.com/${{ github.repository }}/releases/tag/${{ needs.release-please.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- 🪨 **Rockspec**: markdown-plus.nvim-${VERSION}-1.rockspec" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          if [ -n "$PR_NUMBER" ]; then
            echo "1. 🔄 **Auto-merge enabled** for PR [#${PR_NUMBER}](https://github.com/${{ github.repository }}/pull/${PR_NUMBER})" >> $GITHUB_STEP_SUMMARY
            echo "2. ⏳ PR will merge automatically when checks pass" >> $GITHUB_STEP_SUMMARY
            echo "3. 🪨 **LuaRocks publish** will trigger automatically after merge" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Rockspec PR creation failed - please create the rockspec manually" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Monitor progress in the [Actions tab](https://github.com/${{ github.repository }}/actions)." >> $GITHUB_STEP_SUMMARY
